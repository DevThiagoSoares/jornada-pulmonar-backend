generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String          @id @unique
  name          String
  email         String          @unique
  password      String
  imgNameUrl    String
  role          String
  modules       Modules[]
  score         Int             @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?
  userResponses UserResponses[]
}

model Modules {
  id        String      @id @unique
  title     String
  user      Users       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  questions Questions[]
  createdAt DateTime    @default(now())
  updatedAt DateTime?
}

model Questions {
  id            String          @id @unique
  title         String
  audioUrl      String
  imgNameUrl    String
  weight        Int
  alternatives  Options[]       @relation("QuestionOptions")
  module        Modules         @relation(fields: [moduleId], references: [id], onDelete: Cascade)
  moduleId      String
  response      Responses?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?
  responsesId   String?
  userResponses UserResponses[]
}

model Options {
  id            String          @id @unique
  content       String
  question      Questions       @relation("QuestionOptions", fields: [questionId], references: [id], onDelete: Cascade)
  questionId    String
  Response      Responses[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime?
  userResponses UserResponses[]
}

model Responses {
  id         String    @id @unique
  choice     Options   @relation(fields: [choiceId], references: [id], onDelete: Cascade)
  choiceId   String
  question   Questions @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId String    @unique
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
}

model UserResponses {
  id         String    @id @unique
  isCorrect  Boolean
  user       Users     @relation(fields: [userId], references: [id])
  userId     String
  question   Questions @relation(fields: [questionId], references: [id])
  questionId String
  choice     Options   @relation(fields: [choiceId], references: [id])
  choiceId   String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime?
}
